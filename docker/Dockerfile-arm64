# docker build --platform linux/arm64 -f Dockerfile-arm64 -t misc .
# docker run --rm -ti --platform linux/arm64 -p 8888:8888 misc

# on arm64 ubuntu, you need to "sudo apt-get install qemu binfmt-support qemu-user-static" # Install the qemu packages
# "docker run --rm --privileged multiarch/qemu-user-static --reset -p yes" # This step will execute the registering scripts

FROM arm64v8/ubuntu:22.04

#Install ubuntu libraires and packages
RUN apt-get update -y
RUN apt-get install -y wget python3-pip
RUN apt-get install -y libgeos-dev libproj-dev proj-data proj-bin   

# install all the python and ipython notebook requirements
RUN pip3 install --upgrade pip
RUN pip3 install numpy scipy matplotlib jupyter pandas sympy nose
RUN pip3 install ipyparallel pyproj pyshp Pillow
RUN pip3 install moviepy cartopy

RUN pip3 install Cython

RUN pip3 install statistics netCDF4

RUN pip3 uninstall -y shapely
RUN pip3 install shapely --no-binary shapely

#install pygplates
RUN apt-get update -y
#RUN wget https://www.earthbyte.org/download/9079/ -O /pygplates_0.36.0_py310_ubuntu-22.04-amd64.deb
#RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata
#RUN apt-get install -y /pygplates_0.36.0_py310_ubuntu-22.04-amd64.deb
#RUN rm /pygplates_0.36.0_py310_ubuntu-22.04-amd64.deb

COPY pygplates_0.38.0_py310_ubuntu-22.04-arm64.deb /pygplates_0.38.0_py310_ubuntu-22.04-arm64.deb
RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata
RUN apt-get install -y /pygplates_0.38.0_py310_ubuntu-22.04-arm64.deb
RUN rm /pygplates_0.38.0_py310_ubuntu-22.04-arm64.deb

ENV PYTHONPATH ${PYTHONPATH}:/usr/lib:/usr/lib/pygplates/revision36

RUN mkdir /home/workspace
WORKDIR /home/workspace

# Add Tini. Tini operates as a process subreaper for jupyter. This prevents
# kernel crashes.
ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini
#ENTRYPOINT ["/usr/bin/tini", "--"]

RUN useradd -m -s /bin/bash -N mchin

CMD ["/usr/local/bin/jupyter", "notebook", "--no-browser", "--ip=0.0.0.0", "--NotebookApp.token=''"]

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

EXPOSE 8888

RUN chown mchin /tmp

USER mchin
